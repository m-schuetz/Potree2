
// see https://colorbrewer2.org/#type=diverging&scheme=Spectral&n=11

export class Gradient{

	constructor(steps){
		this.steps = steps;
	}

	get(u){

		let n = u * (this.steps.length - 1);
		let v = n % 1;

		let i = Math.floor(n) % this.steps.length;
		let j = Math.ceil(n) % this.steps.length;

		let a = this.steps[i];
		let b = this.steps[j];

		let color = [
			(1 - v) * a[0] + v * b[0],
			(1 - v) * a[1] + v * b[1],
			(1 - v) * a[2] + v * b[2],
		];

		return color;
	}
	
}

export let SPECTRAL = new Gradient([
	[ 94,  79, 162, 255], 
	[ 50, 136, 189, 255], 
	[102, 194, 165, 255], 
	[171, 221, 164, 255], 
	[230, 245, 152, 255], 
	[255, 255, 191, 255], 
	[254, 224, 139, 255], 
	[253, 174,  97, 255], 
	[244, 109,  67, 255], 
	[213,  62,  79, 255], 
	[158,   1,  66, 255], 
]);

export let PLASMA = new Gradient([
	[255 * 0.241, 255 * 0.015, 255 * 0.610, 255],
	[255 * 0.387, 255 * 0.001, 255 * 0.654, 255],
	[255 * 0.524, 255 * 0.025, 255 * 0.653, 255],
	[255 * 0.651, 255 * 0.125, 255 * 0.596, 255],
	[255 * 0.752, 255 * 0.227, 255 * 0.513, 255],
	[255 * 0.837, 255 * 0.329, 255 * 0.431, 255],
	[255 * 0.907, 255 * 0.435, 255 * 0.353, 255],
	[255 * 0.963, 255 * 0.554, 255 * 0.272, 255],
	[255 * 0.992, 255 * 0.681, 255 * 0.195, 255],
	[255 * 0.987, 255 * 0.822, 255 * 0.144, 255],
	[255 * 0.940, 255 * 0.975, 255 * 0.130, 255],
]);

export let VIRIDIS = new Gradient([
	[255 * 0.267, 255 * 0.005, 255 * 0.329, 255],
	[255 * 0.283, 255 * 0.141, 255 * 0.458, 255],
	[255 * 0.254, 255 * 0.265, 255 * 0.530, 255],
	[255 * 0.207, 255 * 0.372, 255 * 0.553, 255],
	[255 * 0.164, 255 * 0.471, 255 * 0.558, 255],
	[255 * 0.128, 255 * 0.567, 255 * 0.551, 255],
	[255 * 0.135, 255 * 0.659, 255 * 0.518, 255],
	[255 * 0.267, 255 * 0.749, 255 * 0.441, 255],
	[255 * 0.478, 255 * 0.821, 255 * 0.318, 255],
	[255 * 0.741, 255 * 0.873, 255 * 0.150, 255],
	[255 * 0.993, 255 * 0.906, 255 * 0.144, 255],
]);

export let INFERNO = new Gradient([
	[255 * 0.077, 255 * 0.042, 255 * 0.206, 255],
	[255 * 0.225, 255 * 0.036, 255 * 0.388, 255],
	[255 * 0.373, 255 * 0.074, 255 * 0.432, 255],
	[255 * 0.522, 255 * 0.128, 255 * 0.420, 255],
	[255 * 0.665, 255 * 0.182, 255 * 0.370, 255],
	[255 * 0.797, 255 * 0.255, 255 * 0.287, 255],
	[255 * 0.902, 255 * 0.364, 255 * 0.184, 255],
	[255 * 0.969, 255 * 0.516, 255 * 0.063, 255],
	[255 * 0.988, 255 * 0.683, 255 * 0.072, 255],
	[255 * 0.961, 255 * 0.859, 255 * 0.298, 255],
	[255 * 0.988, 255 * 0.998, 255 * 0.645, 255],
]);

export let GRAYSCALE = new Gradient([
	[  0,   0,   0, 255],
	[255, 255, 255, 255],
]);

export let TURBO = new Gradient([
	[255 * 0.18995, 255 * 0.07176, 255 * 0.23217, 255],
	[255 * 0.25107, 255 * 0.25237, 255 * 0.63374, 255],
	[255 * 0.27628, 255 * 0.42118, 255 * 0.89123, 255],
	[255 * 0.25862, 255 * 0.57958, 255 * 0.99876, 255],
	[255 * 0.15844, 255 * 0.73551, 255 * 0.92305, 255],
	[255 * 0.09267, 255 * 0.86554, 255 * 0.76230, 255],
	[255 * 0.19659, 255 * 0.94901, 255 * 0.59466, 255],
	[255 * 0.42778, 255 * 0.99419, 255 * 0.38575, 255],
	[255 * 0.64362, 255 * 0.98999, 255 * 0.23356, 255],
	[255 * 0.80473, 255 * 0.92452, 255 * 0.20459, 255],
	[255 * 0.93301, 255 * 0.81236, 255 * 0.22667, 255],
	[255 * 0.99314, 255 * 0.67408, 255 * 0.20348, 255],
	[255 * 0.98360, 255 * 0.49291, 255 * 0.12849, 255],
	[255 * 0.92105, 255 * 0.31489, 255 * 0.05475, 255],
	[255 * 0.81608, 255 * 0.18462, 255 * 0.01809, 255],
	[255 * 0.66449, 255 * 0.08436, 255 * 0.00424, 255],
]);

export const Gradients = {
	SPECTRAL, PLASMA, VIRIDIS, INFERNO, GRAYSCALE, TURBO
};